---
- name: OpenVPN repository setup (Debian based)
  block:
  - name: Add OpenVPN apt key (Debian based)
    apt_key:
      url: https://swupdate.openvpn.net/repos/repo-public.gpg
      state: present

  - name: Add OpenVPN repository (Debian based)
    apt_repository:
      repo: "deb http://build.openvpn.net/debian/openvpn/stable {{ ansible_distribution_release }} main"
      state: present

  - name: Install OpenVPN from official repo (Debian based)
    apt:
      name: openvpn
      state: latest
      update_cache: yes
  when: ansible_os_family == "Debian"

- name: Ensure epel is installed
  yum:
    name: epel-release
    state: latest
  when: ansible_os_family == "RedHat"

- name: OpenVPN repository setup (RedHat based)
  block:
  - name: Install OpenVPN with YUM
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - openvpn
      - wget
  when: ansible_os_family == "RedHat"

- name: Download EasyRSA
  get_url:
    url: "{{ easy_rsa_url }}"
    dest: /tmp/easyrsa.tgz

- name: Unpack EasyRSA tarball
  unarchive:
    src: /tmp/easyrsa.tgz
    dest: /etc/openvpn/
    remote_src: yes

- name: Delete tarball
  file:
    path: /tmp/easyrsa.tgz
    state: absent

- name: Template vars file
  template:
    src: templates/vars.j2
    dest: /etc/openvpn/EasyRSA-v3.0.6/vars

# SETUP SERVER SIDE
- block:
  - name: Initiate public key infrastructure
    command: "./easyrsa init-pki"
    args:
      chdir: /etc/openvpn/EasyRSA-v3.0.6/
      creates: pki

  - name: Build CA
    command: "./easyrsa build-ca nopass"
    args:
      chdir: /etc/openvpn/EasyRSA-v3.0.6/
      creates: pki/ca.crt

  - name: Generate server request files
    command: "./easyrsa gen-req {{ inventory_hostname }}-vpn-server nopass"
    args:
      chdir: /etc/openvpn/EasyRSA-v3.0.6/
      creates: pki/private/{{ inventory_hostname }}-vpn-server.key

  - name: Sign server certificate
    command: "./easyrsa sign-req server {{ inventory_hostname }}-vpn-server"
    args:
      chdir: /etc/openvpn/EasyRSA-v3.0.6/
      creates: pki/issued/{{ inventory_hostname }}-vpn-server.crt

  - name: Create Diffie-Hellman key
    command: "./easyrsa gen-dh"
    args:
      chdir: /etc/openvpn/EasyRSA-v3.0.6/
      creates: pki/dh.pem

  - name: Generate HMAC signature
    command: "openvpn --genkey --secret ta.key"
    args:
      chdir: /etc/openvpn/EasyRSA-v3.0.6/
      creates: ta.key

  - name: Copy files to OpenVPN directory
    copy:
      src: "{{ item }}"
      dest: /etc/openvpn
      remote_src: yes
    with_items:
    - "/etc/openvpn/EasyRSA-v3.0.6/pki/ca.crt"
    - "/etc/openvpn/EasyRSA-v3.0.6/pki/private/{{ inventory_hostname }}-vpn-server.key"
    - "/etc/openvpn/EasyRSA-v3.0.6/pki/issued/{{ inventory_hostname }}-vpn-server.crt"
    - "/etc/openvpn/EasyRSA-v3.0.6/pki/dh.pem"
    - "/etc/openvpn/EasyRSA-v3.0.6/ta.key"

  - name: Template OpenVPN server configuration file
    template:
      src: templates/server.conf.j2
      dest: "/etc/openvpn/{{ inventory_hostname }}-vpn-server.conf"

  - name: Enable IP forwarding
    sysctl:
      name: net.ipv4.ip_forward
      value: 1
      sysctl_set: yes
      state: present
      reload: yes
  - name: Create OpenVPN log directory
    file:
      path: "/var/log/openvpn"
      state: directory
      mode: 0755
    when: ansible_os_family ==  "Debian"

  - name: Create log files
    file:
      path: "{{ item }}"
      state: touch
      mode: 0644
    with_items:
    - "/var/log/openvpn/openvpn.log"
    - "/var/log/openvpn/openvpn-status.log"
    when: ansible_os_family ==  "Debian"

              #        - name: Set log files ownership
              #          file:
              #                  path: /var/log/openvpn
              #                  owner: openvpn
              #                  group: opevpn
              #          when: ansible_os_family ==  "RedHat"

  - name: Start and enable openvpn service
    systemd:
      name: "openvpn@{{ inventory_hostname }}-vpn-server"
      state: restarted
      enabled: yes

  environment:
    EASYRSA_BATCH: 1
